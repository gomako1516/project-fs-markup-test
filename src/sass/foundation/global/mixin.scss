@charset 'utf-8';
@use 'variables' as *;

///////////////////////////////////////////////////////////
// mixin
///////////////////////////////////////////////////////////

// メディアクエリ
// @param $breakPoint ブレイクポイント（`variables.scss`の変数で指定すること）
// **********************************************
@mixin max-screen($breakPoint) {
  @media (max-width: $breakPoint) {
    @content;
  }
}
@mixin min-screen($breakPoint) {
  @media (min-width: $breakPoint) {
    @content;
  }
}
@mixin screen($breakPoint_min, $breakPoint_max) {
  @media (min-width: $breakPoint_min) and (max-width: $breakPoint_max) {
    @content;
  }
}

// ホバー
// **********************************************
@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// ディスプレイ
// **********************************************
@mixin display-helper($breakpoint, $display-type) {
  .d-#{$breakpoint}-#{$display-type} {
    @if $display-type == "none" {
      display: block;
      @include mq-up($breakpoint) {
        display: none;
      }
    }
    @if $display-type == "block" {
      display: none;
      @include mq-up($breakpoint) {
        display: block;
      }
    }
  }
}

// アイコン（疑似要素をアイコン化する時に使用）
// @param $file_name `/assets/img/`以降の画像パス
// @param $width アイコンの横幅
// @param $height アイコンの高さ
// **********************************************
@mixin icon($file_name, $width, $height) {
  width: $width;
  height: $height;
  background: url($path_img + $file_name) center / $width $height no-repeat;
}